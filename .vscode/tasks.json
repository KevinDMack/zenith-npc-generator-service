{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "üêç Install Dependencies",
            "type": "shell",
            "command": "pip",
            "args": ["install", "-r", "requirements.txt"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Install Python dependencies from requirements.txt"
        },
        {
            "label": "üöÄ Run Application (Local)",
            "type": "shell",
            "command": "python3",
            "args": ["app.py"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Run the NPC Generator service locally",
            "dependsOn": "üîß Check Environment"
        },
        {
            "label": "üîß Check Environment",
            "type": "shell",
            "command": "python3",
            "args": ["-c", "import os; missing = [var for var in ['AZURE_OPENAI_ENDPOINT', 'AZURE_OPENAI_API_KEY', 'AZURE_OPENAI_DEPLOYMENT_NAME'] if not os.getenv(var)]; print('‚úÖ Environment OK' if not missing else f'‚ùå Missing: {\", \".join(missing)}. Please check your .env file.')"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Check if required environment variables are set"
        },
        {
            "label": "üß™ Test Service",
            "type": "shell",
            "command": "python3",
            "args": ["test_service.py"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Run the test suite against the running service"
        },
        {
            "label": "üìã Health Check",
            "type": "shell",
            "command": "curl",
            "args": ["-f", "http://localhost:5000/health"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Check if the service is running and healthy"
        },
        {
            "label": "üê≥ Docker: Build Image",
            "type": "shell",
            "command": "docker",
            "args": ["build", "-t", "zenith-npc-generator:latest", "."],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Build Docker image for the NPC Generator service"
        },
        {
            "label": "üê≥ Docker: Run Container",
            "type": "shell",
            "command": "docker",
            "args": [
                "run", "-d",
                "--name", "npc-generator",
                "-p", "5000:5000",
                "--env-file", ".env",
                "-v", "${workspaceFolder}/citizens:/app/citizens",
                "--restart", "unless-stopped",
                "zenith-npc-generator:latest"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Run Docker container with volume mounting and environment variables",
            "dependsOn": "üê≥ Docker: Build Image"
        },
        {
            "label": "üê≥ Docker: Run Container (Interactive)",
            "type": "shell",
            "command": "docker",
            "args": [
                "run", "--rm", "-it",
                "-p", "5000:5000",
                "--env-file", ".env",
                "-v", "${workspaceFolder}/citizens:/app/citizens",
                "zenith-npc-generator:latest"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Run Docker container interactively (auto-removes when stopped)",
            "dependsOn": "üê≥ Docker: Build Image"
        },
        {
            "label": "üê≥ Docker: Stop Container",
            "type": "shell",
            "command": "docker",
            "args": ["stop", "npc-generator"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Stop the running Docker container"
        },
        {
            "label": "üê≥ Docker: Remove Container",
            "type": "shell",
            "command": "docker",
            "args": ["rm", "npc-generator"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Remove the Docker container",
            "dependsOn": "üê≥ Docker: Stop Container"
        },
        {
            "label": "üê≥ Docker: View Logs",
            "type": "shell",
            "command": "docker",
            "args": ["logs", "-f", "npc-generator"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "View Docker container logs (follow mode)"
        },
        {
            "label": "üê≥ Docker Compose: Up",
            "type": "shell",
            "command": "docker-compose",
            "args": ["up", "--build"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Build and run using Docker Compose"
        },
        {
            "label": "üê≥ Docker Compose: Up (Background)",
            "type": "shell",
            "command": "docker-compose",
            "args": ["up", "-d", "--build"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Build and run in background using Docker Compose"
        },
        {
            "label": "üê≥ Docker Compose: Down",
            "type": "shell",
            "command": "docker-compose",
            "args": ["down"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Stop and remove Docker Compose services"
        },
        {
            "label": "üê≥ Docker Compose: Logs",
            "type": "shell",
            "command": "docker-compose",
            "args": ["logs", "-f"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": true,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "View Docker Compose logs (follow mode)"
        },
        {
            "label": "üìÑ Setup Environment File",
            "type": "shell",
            "command": "cp",
            "args": [".env.example", ".env"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Copy .env.example to .env for configuration"
        },
        {
            "label": "üßπ Clean Up Docker",
            "type": "shell",
            "command": "docker",
            "args": ["system", "prune", "-f"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Clean up unused Docker images and containers"
        },
        {
            "label": "üìÅ Open Citizens Directory",
            "type": "shell",
            "command": "code",
            "args": ["./citizens"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Open the citizens directory to view generated NPCs"
        },
        {
            "label": "üîç Check Docker Status",
            "type": "shell",
            "command": "docker",
            "args": ["ps", "-a", "--filter", "name=npc-generator"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": [],
            "detail": "Check Docker container status"
        }
    ]
}